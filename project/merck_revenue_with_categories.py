# -*- coding: utf-8 -*-
"""Copy of Merck Revenue with Categories.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yel5qGLKBd4FK9Yw1IP8UL4xmeBJP232
"""

import os


import pandas as pd
import numpy as np
import pyodbc
import datetime
import openpyxl
from dateutil.relativedelta import relativedelta
import os 


SERVER = os.getenv('SERVER')
DB = os.getenv('DB')
USERNAME = os.getenv('USERNAME')
PASSWORD = os.getenv('PASSWORD')


cnxn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER='+SERVER+';DATABASE='+DB+';UID='+USERNAME+';PWD='+ PASSWORD)
cursor = cnxn.cursor()

# Commented out IPython magic to ensure Python compatibility.
# %%sh
# lsb_release -a

def retreive_val ( query):
    """execute query and turn the data in the a list of dict

    Args:
        query (_type_): _description_

    Returns:
        list of dictionary: all data from the data as a list of dict
    """
    cursor.execute(query)
    result = cursor.fetchall()
    col = [column[0] for column in cursor.description]
    result_LoD = [dict(zip(col,x)) for x in result ]
    # LoD = list of dict
    return col,result_LoD

if __name__ == '__main__':
  # Get revenue data from the database
  revenue_pd = pd.DataFrame(retreive_val("""select * from bi_revenue where docuno like 'IVZ%'
                                        and  year(docudate)=2023
                                        and แบรนด์ in 
                                        ('Sigma-Aldrich', 'Supelco', 'Roche', 'Sigma', 'Millipore', 'Aldrich', 'Supelco', 'Merck')
                                        """)[1])

  # If file not found, copy the file path from the panel on the left (assuming you are on GDrive)
  cat_pd = pd.read_csv('project/cleaned_unique_category.csv',encoding = 'unicode_escape')



  revenue_pd_dict = revenue_pd.to_dict('records')
  cat_pd_dict = cat_pd.to_dict('records')


  for r in revenue_pd_dict:
    # Initialize to be NOT FOUND first
    r['found'] = False
    r['รหัสสินค้า'] = r['รหัสสินค้า'].upper()
    # Loop through the category dictionary
    for c in cat_pd_dict:
      if isinstance(c['product_code'], str):
        if r['รหัสสินค้า'].upper() == c['product_code'].upper():
          for k,v in c.items():
            if k != 'product_code' and k != 'product_description':
              r[k] = c[k]
              r['found']= True
        else:
          if 'SIA' in r['รหัสสินค้า'].upper() and r['รหัสสินค้า'].count('-')==2:
            if r['รหัสสินค้า'].split('-')[1] in  c['product_code'].upper():
              for k,v in c.items():
                if k != 'product_code' and k != 'product_description':
                  r[k] = c[k]
                  r['found']= True
      else:
        cap_list = [x.upper() for x in c['product_code']]

        if r['รหัสสินค้า'].upper() in cap_list:
          for k,v in c.items():
            if k != 'product_code' and k != 'product_description':
              r[k] = c[k]
              r['found']= True
        else:
          if 'SIA' in r['รหัสสินค้า'].upper() and r['รหัสสินค้า'].count('-')==2:
            if r['รหัสสินค้า'].split('-')[1] in  cap_list:
              for k,v in c.items():
                if k != 'product_code' and k != 'product_description':
                  r[k] = c[k]
                  r['found']= True

  """# New Section"""

  searched = pd.DataFrame(revenue_pd_dict)
  print(searched)
  merck_brand = ['Sigma-Aldrich', 'Supelco', 'Roche', 'Sigma', 'Millipore', 'Aldrich', 'Supelco', 'Merck']
  searched= searched[searched['แบรนด์'].isin(merck_brand)]
  print(searched.columns)
  drop_col = ['product_code', 'product_description']
  for d in drop_col:
    if d in searched.columns:
      searched.drop(columns=[d])

  searched.to_csv('searched.csv')

  searched['found'].value_counts()

  # Unmatched product based on the data provided from Merck.
  # I suspect that the unmatched products are other product categories since we only have the categories from Merck SLS (life science)
  # For example, top 3 products listed here are under industrial microbiology which is another BU in MERCK
  unfound_pd= searched[~searched['found']][['รหัสสินค้า','รายละเอียดสินค้า']].value_counts().rename_axis(['product_code','description']).reset_index(name='counts')
